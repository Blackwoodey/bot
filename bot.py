from dotenv import load_dotenv
load_dotenv()
import asyncio
import os
from aiogram import Bot, Dispatcher, F, Router
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from config import BOT_TOKEN
from handlers import user_input
from services.gpt_core import get_temperature, set_temperature

router = Router()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º—Ç")],
        [KeyboardButton(text="üå°Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É")]
    ],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /menu
@router.message(F.text == "/menu")
async def show_menu(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º—Ç"
@router.message(F.text == "üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º—Ç")
async def prompt_change_request(message: Message):
    if str(message.from_user.id) not in ["791851827", "689955387"]:
        return await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –ø—Ä–æ–º—Ç–∞.")

    try:
        with open("prompt.txt", "r", encoding="utf-8") as f:
            current_prompt = f.read()
    except Exception:
        current_prompt = "[–ü—Ä–æ–º—Ç –µ—â—ë –Ω–µ –∑–∞–¥–∞–Ω]"

    await message.answer(
        f"üìÑ –¢–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç:\n\n{current_prompt}\n\n‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º—Ç:",
        reply_markup=ReplyKeyboardRemove()
    )

    with open(".prompt_state", "w") as f:
        f.write(str(message.from_user.id))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É"
@router.message(F.text == "üå°Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É")
async def temperature_change_request(message: Message):
    if str(message.from_user.id) not in ["791851827", "689955387"]:
        return await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã.")

    try:
        current_temp = get_temperature()
    except:
        current_temp = "1.0 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"

    await message.answer(
        f"üå°Ô∏è –¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {current_temp}\n\n‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0.0 –¥–æ 2.0:",
        reply_markup=ReplyKeyboardRemove()
    )

    with open(".temperature_state", "w") as f:
        f.write(str(message.from_user.id))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º—Ç–∞ –∏–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
@router.message()
async def catch_prompt_or_temperature(message: Message):
    user_id = str(message.from_user.id)

    # –ü—Ä–æ–º—Ç
    if os.path.exists(".prompt_state"):
        with open(".prompt_state", "r") as f:
            waiting_id = f.read().strip()

        if user_id == waiting_id:
            with open("prompt.txt", "w", encoding="utf-8") as f:
                f.write(message.text)

            os.remove(".prompt_state")
            return await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã", reply_markup=main_keyboard)

    # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    if os.path.exists(".temperature_state"):
        with open(".temperature_state", "r") as f:
            waiting_id = f.read().strip()

        if user_id == waiting_id:
            try:
                new_temp = float(message.text.strip())
                if not (0 <= new_temp <= 2):
                    raise ValueError
                set_temperature(new_temp)
                await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã", reply_markup=main_keyboard)
            except:
                await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 0.0 –¥–æ 2.0 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 0.7)")
            os.remove(".temperature_state")
            return

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()
    dp.include_router(user_input.router)
    dp.include_router(router)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
