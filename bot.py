from dotenv import load_dotenv
load_dotenv()
import asyncio
import os
from aiogram import Bot, Dispatcher, F, Router
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from config import BOT_TOKEN
from handlers import user_input
from services.gpt_core import get_temperature, set_temperature
from prompt_editor import router as prompt_editor_router

router = Router()
ADMINS = {"791851827", "689955387"}

main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º—Ç")],
        [KeyboardButton(text="üå°Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É")]
    ],
    resize_keyboard=True
)

@router.message(F.text == "/menu")
async def show_menu(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard)

@router.message(F.text == "üå°Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É")
async def temperature_change_request(message: Message):
    if str(message.from_user.id) not in ADMINS:
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã.")

    try:
        current_temp = get_temperature()
    except:
        current_temp = "1.0 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"

    await message.answer(
        f"üå°Ô∏è –¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {current_temp}\n\n‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0.0 –¥–æ 2.0:",
        reply_markup=None
    )

    with open(".temperature_state", "w") as f:
        f.write(str(message.from_user.id))

@router.message()
async def catch_temperature(message: Message):
    user_id = str(message.from_user.id)

    if os.path.exists(".temperature_state"):
        with open(".temperature_state", "r") as f:
            waiting_id = f.read().strip()

        if user_id == waiting_id:
            try:
                new_temp = float(message.text.strip())
                if not (0 <= new_temp <= 2):
                    raise ValueError
                set_temperature(new_temp)
                await message.answer("‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞", reply_markup=main_keyboard)
            except:
                await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 0.0 –¥–æ 2.0 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 0.7)")
            os.remove(".temperature_state")
            return

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()
    dp.include_router(user_input.router)
    dp.include_router(prompt_editor_router)
    dp.include_router(router)

    # üí• –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook –ø–µ—Ä–µ–¥ polling
    await bot.delete_webhook(drop_pending_updates=True)

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
