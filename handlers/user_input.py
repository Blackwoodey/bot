from aiogram import Router, types, F
from datetime import datetime
from aiogram.filters import Command
from services.calculator import calculate_archetypes
from services.textbase import get_text
from services.gpt_core import generate_prophetic_text
from services.logger import save_to_history
from handlers.stage2_question import ask_initiation_question
from handlers.stage3_recognition import recognize_arch_state
from handlers.stage3_direction import suggest_path_from_arch
from handlers.stage4_offer import offer_calculation
from services.detect_theme import detect_theme  # ‚¨ÖÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–æ

router = Router()
user_context = {}

@router.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç. –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n11.02.1986"
    )

@router.message(F.text.regexp(r"^\d{2}\.\d{2}\.\d{4}$"))
async def date_handler(message: types.Message):
    try:
        birth_date = datetime.strptime(message.text, "%d.%m.%Y")
        current_year = datetime.now().year

        if not (1900 <= birth_date.year <= current_year):
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ä–µ–∞–ª—å–Ω—ã–π –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Ç 1900 –¥–æ —Ç–µ–∫—É—â–µ–≥–æ üóìÔ∏è")
            return

        core, fear, realization = calculate_archetypes(message.text)
        core_text = get_text("core", core)
        fear_text = get_text("fear", fear)
        realization_text = get_text("realization", realization)

        print("\n=== –í–•–û–î –í GPT ===")
        print(f"CORE:\n{core_text}\n")
        print(f"FEAR:\n{fear_text}\n")
        print(f"REALIZATION:\n{realization_text}\n")
        print("==================\n")

        result = generate_prophetic_text(core_text, fear_text, realization_text)
        save_to_history(core_text, fear_text, realization_text, result)

        MAX_LEN = 4096
        for i in range(0, len(result), MAX_LEN):
            await message.answer(result[i:i+MAX_LEN])

        stage2_reply = ask_initiation_question(core_text, fear_text, realization_text)
        await message.answer(stage2_reply)

        user_context[message.from_user.id] = {
            "state": "awaiting_stage3",
            "arch": None,
            "theme": None,
            "last_user_message": ""
        }

    except ValueError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π –î–î.–ú–ú.–ì–ì–ì–ì.")
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

@router.message(F.text & ~F.text.startswith("/"))
async def handle_stages(message: types.Message):
    user_id = message.from_user.id
    context = user_context.get(user_id, {})

    if context.get("state") == "awaiting_stage3":
        arch_result = recognize_arch_state(message.text)
        await message.answer(arch_result)

        known = [
            "–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π", "–ë–∞—à–Ω—è", "–õ—É–Ω–∞", "–î—å—è–≤–æ–ª", "–û—Ç—à–µ–ª—å–Ω–∏–∫", "–§–æ—Ä—Ç—É–Ω–∞", "–°–º–µ—Ä—Ç—å",
            "–ñ—Ä–∏—Ü–∞", "–í–ª—é–±–ª—ë–Ω–Ω—ã–µ", "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å", "–ú–∏—Ä", "–ú–∞–≥", "–ó–≤–µ–∑–¥–∞"
        ]
        detected = next((a for a in known if a in arch_result), None)
        context["arch"] = detected or "–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π"
        context["last_user_message"] = message.text

        direction = suggest_path_from_arch(context["arch"])
        await message.answer(direction)

        context["state"] = "awaiting_stage4"
        user_context[user_id] = context
        return

    if context.get("state") == "awaiting_stage4":
        theme = detect_theme(message.text)
        context["theme"] = theme
        context["last_user_message"] = message.text

        final_reply = offer_calculation(theme, message.text)
        await message.answer(final_reply)

        context["state"] = "awaiting_payment_confirmation"
        user_context[user_id] = context
        return

    if context.get("state") == "awaiting_payment_confirmation":
        agree_words = ["–¥–∞", "–¥–∞–≤–∞–π", "–≥–æ—Ç–æ–≤", "—Ö–æ—á—É", "—Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å", "—Å–æ–≥–ª–∞—Å–µ–Ω", "–ø–æ–¥—Ö–æ–¥–∏—Ç", "–æ–∫"]

        if any(w in message.text.lower() for w in agree_words):
            theme = context.get("theme", "–æ–±—â–∞—è")
            payment_message = ""

            if theme == "–¥–µ–Ω—å–≥–∏":
                payment_message = (
                    "ü™ô –†–∞—Å—á—ë—Ç ‚Äú4 = 1‚Äù ‚Äî –ò–Ω–∏—Ü–∏–∞—Ü–∏—è –Ω–∞ –Ω–æ–≤—ã–π –¥–µ–Ω–µ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å\n"
                    "–¢—ã –ø–æ–ª—É—á–∞–µ—à—å 4 —Ç–æ—á–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–∞ –ø–æ –¥–∞—Ç–µ:\n\n"
                    "‚Äî –ì–¥–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç –¥–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫\n"
                    "‚Äî –¢–≤–æ–π –∞—Ä—Ö–µ—Ç–∏–ø –±–µ–¥–Ω–æ—Å—Ç–∏ –∏ –∞–º—É–ª–µ—Ç —Å–∏–ª—ã\n"
                    "‚Äî –ê—Ä—Ö–µ—Ç–∏–ø –¥–æ–ª–≥–∞ –∏ —Ä–∏—Ç—É–∞–ª –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è\n"
                    "‚Äî –¢–µ–Ω—å –±–æ–≥–∞—Ç—Å—Ç–≤–∞ ‚Äî –∏ –∫–∞–∫ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –µ—ë –≤ —Å–∏–ª—É\n\n"
                    "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 890‚ÇΩ –≤–º–µ—Å—Ç–æ 4900‚ÇΩ\n"
                    "üîó –î–ª—è –æ–ø–ª–∞—Ç—ã (–†–æ—Å—Å–∏—è): 5536 9140 2191 7509 (–ö—Å–µ–Ω–∏—è –†—É–∑–∞–Ω–æ–≤–∞)\n"
                    "üåç –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω: https://payform.ru/5e6P2sb\n"
                    "üìù –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã: —á–µ–∫, –§–ò–û –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è ‚Üí @TaroKsenia"
                )
            elif theme == "–∫—Ä–∏–∑–∏—Å":
                payment_message = (
                    "‚ö†Ô∏è –†–∞—Å—á—ë—Ç ‚Äú–í—ã—Ö–æ–¥ –∏–∑ –∫—Ä–∏–∑–∏—Å–∞‚Äù ‚Äî 3 —Å—Ü–µ–Ω–∞—Ä–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø–µ—Ç–ª–∏\n"
                    "–¢—ã —É–∑–Ω–∞–µ—à—å:\n"
                    "‚Äî –ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —Å–µ–π—á–∞—Å –∑–∞—Å—Ç–æ–π\n"
                    "‚Äî –û—Ç–∫—É–¥–∞ –ø—Ä–∏—à—ë–ª —É–¥–∞—Ä\n"
                    "‚Äî –ß—Ç–æ –∑–∞ —Ü–∏–∫–ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è\n"
                    "‚Äî –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å—Å—è (3 –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—É—Ç–∏)\n\n"
                    "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 490‚ÇΩ –≤–º–µ—Å—Ç–æ 2900‚ÇΩ\n"
                    "üîó –î–ª—è –æ–ø–ª–∞—Ç—ã (–†–æ—Å—Å–∏—è): 5536 9140 2191 7509 (–ö—Å–µ–Ω–∏—è –†—É–∑–∞–Ω–æ–≤–∞)\n"
                    "üåç –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω: https://payform.ru/gd7kXZP\n"
                    "üìù –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã: —á–µ–∫, –§–ò–û –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è ‚Üí @TaroKsenia"
                )
            else:
                payment_message = (
                    "üåå –†–∞—Å—á—ë—Ç ‚Äú–Ø–¥—Ä–æ ‚Äì –¢–µ–Ω—å ‚Äì –ë–ª–æ–∫ ‚Äì –ü–µ—Ä–µ—Ö–æ–¥‚Äù\n"
                    "–¢—ã —É–≤–∏–¥–∏—à—å:\n"
                    "‚Äî –¢–≤–æ—é –±–∞–∑–æ–≤—É—é –∞—Ä—Ö–µ—Ç–∏–ø–∏—á–µ—Å–∫—É—é —Å–∏–ª—É (—è–¥—Ä–æ)\n"
                    "‚Äî –ì–¥–µ —Ç—ã –∑–∞—Å—Ç—Ä—è–ª (—Ç–µ–Ω—å)\n"
                    "‚Äî –ß—Ç–æ –º–µ—à–∞–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ (–±–ª–æ–∫)\n"
                    "‚Äî –ò –∞—Ä—Ö–µ—Ç–∏–ø —Å–∏–ª—ã, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –ø—É—Ç—å\n\n"
                    "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 490‚ÇΩ –≤–º–µ—Å—Ç–æ 2900‚ÇΩ\n"
                    "üîó –î–ª—è –æ–ø–ª–∞—Ç—ã (–†–æ—Å—Å–∏—è): 5536 9140 2191 7509 (–ö—Å–µ–Ω–∏—è –†—É–∑–∞–Ω–æ–≤–∞)\n"
                    "üåç –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω: https://payform.ru/gd7kXZP\n"
                    "üìù –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã: —á–µ–∫, –§–ò–û –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è ‚Üí @TaroKsenia"
                )

            await message.answer(payment_message)
            context["state"] = "done"
            user_context[user_id] = context
