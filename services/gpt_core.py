import os
from openai import OpenAI
from config import OPENAI_API_KEY, OPENAI_MODEL

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º—Ç
try:
    with open("prompt.txt", "r", encoding="utf-8") as f:
        SYSTEM_PROMPT = f.read()
except Exception as e:
    SYSTEM_PROMPT = "SYSTEM_PROMPT –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: " + str(e)

# üî• –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ Telegram)
TEMPERATURE_FILE = "temperature.txt"

def get_temperature() -> float:
    try:
        with open(TEMPERATURE_FILE, "r", encoding="utf-8") as f:
            return float(f.read().strip())
    except:
        return 1.0  # –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

def set_temperature(new_temp: float):
    with open(TEMPERATURE_FILE, "w", encoding="utf-8") as f:
        f.write(str(new_temp))

# –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç OpenAI
client = OpenAI(api_key=OPENAI_API_KEY)

def generate_prophetic_text(core_text: str, fear_text: str, realization_text: str) -> str:
    try:
        temperature = get_temperature()
        user_input = (
            f"–Ø–¥—Ä–æ: {core_text}\n\n"
            f"–°—Ç—Ä–∞—Ö: {fear_text}\n\n"
            f"–†–µ–∞–ª–∏–∑–∞—Ü–∏—è: {realization_text}"
        )

        # –ü–µ—Ä–≤—ã–π –æ—Ç–≤–µ—Ç
        response = client.chat.completions.create(
            model=OPENAI_MODEL,
            messages=[
                {"role": "system", "content": SYSTEM_PROMPT},
                {"role": "user", "content": user_input}
            ],
            temperature=temperature,
            max_tokens=2500
        )

        result = response.choices[0].message.content.strip()

        # –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π
        if len(result.split()) < 250:
            continuation = client.chat.completions.create(
                model=OPENAI_MODEL,
                messages=[
                    {"role": "system", "content": SYSTEM_PROMPT},
                    {"role": "user", "content": result + "\n\n–ü—Ä–æ–¥–æ–ª–∂–∏, —Ä–∞—Å–∫—Ä–æ–π –≥–ª—É–±–∂–µ, –∑–∞–≤–µ—Ä—à–∏ –ø—É—Ç—å –¥–æ –∫–æ–Ω—Ü–∞."}
                ],
                temperature=temperature,
                max_tokens=1200
            )
            result += "\n\n" + continuation.choices[0].message.content.strip()

        return result

    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}"
